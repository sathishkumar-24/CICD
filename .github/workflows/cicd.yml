name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AStyle
        run: |
          sudo apt-get update -y
          sudo apt-get install -y astyle
          
      - name: Format Code with AStyle
        run: |
          astyle --options=astylerc.txt "build/*.c"

      - name: Check for Changes after Formatting
        run: |
          git diff --exit-code || { echo "Code formatting changes detected. Please commit the changes."; exit 1; }

      - name: Set up Git
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
        shell: bash

      - name: Debug Git Describe
        run: |
          TAG=$(git describe --abbrev=0 --tags --match "v*" 2>/dev/null || echo "No tags found")
          echo "Latest Tag: $TAG"
        shell: bash
        
      - name: Debug Output
        run: |
          echo "PREVIOUS_TAG: $PREVIOUS_TAG"
          echo "PREVIOUS_VERSION: $PREVIOUS_VERSION"
          echo "NEW_VERSION: $NEW_VERSION"
        shell: bash

      - name: Bump version and create tag
        if: github.event_name == 'push'
        run: |
          # Extract the previous tag from the repository, fallback to v1.0.0 if no tags
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags --match "v*" 2>/dev/null)
          if [ -z "$PREVIOUS_TAG" ]; then
            # If no tags found, set to v1.0.0
            PREVIOUS_TAG="v1.0.0"
          fi
          
          # Extract the version number from the previous tag (assuming the tag format is 'vX.Y.Z')
          PREVIOUS_VERSION=$(echo $PREVIOUS_TAG | sed 's/v//')
          
          # Increment version number (assuming semantic versioning X.Y.Z)
          NEW_VERSION=$(echo $PREVIOUS_VERSION | awk -F. -v OFS=. '{++$3; print $1,$2,$3}')
          
          # Update version file with the new version number
          echo $NEW_VERSION > version.txt
          
          # Commit the version number increment
          git commit -am "[version-bump] Bump version to v$NEW_VERSION"
          
          # Create a new tag with the updated version number
          git tag v$NEW_VERSION
          
          # Push changes and the new tag to the repository 
          git push origin main --tags
        shell: bash

